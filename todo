*********************************************
Info on how this todo works                 *
                                            *
Each empty line represents a different day  *
> TASK 1                                    *
> Task 2                                    *
        : New day                           *
> Task 3                                    *
> Task 4                                    *
*********************************************

Create file checking and writing helper functions
Create more efficent method of black listing password : try directly modifying the passwords.txt

MAKE GUI Update after cleaning passwords

ADD create password button
Add delete password button

Create add passwords function instead of directly calling append_file()
Handle empty input field

Handle file operations errors: disk space, file not found, etc
Clear input field
Restructure code for readability

Implement database
Store with aes-128 encryption

implement master password window
brainstorm a way to store master.key or different method which is more secure

Implement password hashing instead of encryption
Implement salting to impove hashing security

Implement master password

find a secure way to store master.key : somehow allow decryption of this key with only master password

------------
REWRITE TIME
------------

> Current security flaw
 > The decrypted master password is stored in GLOBAL_PASSWORD in memory, whilst this may not be a big concern if someone memory dumps it can cause issues

> I will fix this by simply rewriting the script so that I can just call a function to decrypt it when needed then clear it from memory
> I will use 3 files
 > encrypt.py
  > All encryption logic goes in there
 > db.py
  > All database logic goes in there
 > app.py
  > All PyQt5 code goes in there (basically a main python file)

> Improvements?
 > Static typing
 > Error handiling
 > Organization
 > UI Customization (MAYBE???)

Personal Production Ready Score? (on the first version atleast): 6/10
> Security flaw
> Bad organization
> No error catching

Implement duplication checking for passwords
Improve code readability
Seperate into multiple files

FOR FUN : Try using server pc (laptop) sql instead of local **OPTIONAL**

OwlSafe v2 todo
> Add error handling
> Make code much much more modular
> Seperate windows into different files
> Try showing all passwords by decrypting them once then freeing up the memory of the master password